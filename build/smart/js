#!/bin/bash

################################################################################
# smart/js                                                                     #
#                                                                              #
# Author: Korvin Szanto <korvin@concrete5.org>                                 #
#                                                                              #
# In this file, we build several plugins only when they have changed in git.   #
# If you would like to compile everything, regardless of git status, just add  #
# a second token to your invocation:                                           #
#     $ ./build/smart/js all                                                   #
#                                                                              #
#                                                                              #
# We minify javascript files in two ways, the first being a                    #
# straight uglifyjs minification, which you can see with jQuery Cookie, the    #
# second being adding multiple files to a tmp file, adding headers for debug,  #
# then minifying with uglifyjs.                                                #
#                                                                              #
################################################################################



function InfoBlock {
    # Throw an infoblock containing the filename in before we load the file
    str=" $1 ";
    len=${#str}
    lwidth=$(( ( 76 - $len ) / 2 ));
    rwidth=$(( ( 76 - $len ) - $lwidth ));
    x=1
    lstring=''
    while [ $x -le $lwidth ]
    do
        lstring=$lstring' '
        x=$(( $x + 1 ))
    done
    rstring=''
    x=2
    while [ $x -le $rwidth ]
    do
        rstring=$rstring' '
        x=$(( $x + 1 ))
    done
    if [ ! $2 ]; then
        echo ""
        echo ""
    fi
    echo "///////////////////////////////////////////////////////////////////////////////"
    echo "//$lstring$str$rstring//"
    echo "///////////////////////////////////////////////////////////////////////////////"
    echo ""
}


cd $(dirname $0)
cd $(git rev-parse --show-toplevel)

./build/smart/sanitycheck $1

status=$(git status --porcelain 2> /dev/null)

# jQuery Cookie
thisgrep='web/concrete/js/jquery.cookie.js'
if [ $1 ]; then
    thisgrep=''
fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    echo "Building jquery.cookie.js"
    uglifyjs -o ./web/concrete/js/jquery.cookie.js ./web/concrete/js/ccm_app/jquery.cookie.js
fi

# Profile
thisgrep='web/concrete/js/ccm.profile.js'
if [ $1 ]; then
    thisgrep=''
fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    echo "Building ccm.profile.js"
    uglifyjs -o ./web/concrete/js/ccm.profile.js ./web/concrete/js/ccm_profile/base.js
fi

# Redactor
thisgrep='web/concrete/js/redactor/'
if [ $1 ]; then
    thisgrep=''
fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    echo "Building redactor"
    cat ./web/concrete/js/redactor/redactor.js \
        ./web/concrete/js/redactor/redactor.concrete5.js > redactor.tmp.js
    uglifyjs -o  ./web/concrete/js/redactor.js ./redactor.tmp.js
    rm redactor.tmp.js
fi

# Gridster
thisgrep='web/concrete/js/gridster/jquery.gridster.js'
if [ $1 ]; then
    thisgrep=''
fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    echo "Building jquery.gridster.js"
    uglifyjs --no-copyright --no-seqs -o ./web/concrete/js/jquery.gridster.js ./web/concrete/js/gridster/jquery.gridster.js
fi

# Dashboard
thisgrep='web/concrete/js/ccm_app/dashboard.js'
if [ $1 ]; then
    thisgrep=''
fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    echo "Building dashboard.js"
    uglifyjs --no-copyright --no-seqs -o ./web/concrete/js/ccm.dashboard.js ./web/concrete/js/ccm_app/dashboard.js
fi

# Composer
thisgrep='web/concrete/js/composer/composer.js'
if [ $1 ]; then
    thisgrep=''
fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    echo "Building composer.js"
    uglifyjs --no-copyright --no-seqs -o ./web/concrete/js/ccm.compose.js ./web/concrete/js/composer/composer.js
fi

# Conversations
thisgrep='web/concrete/js/ccm_app/conversations/'
if [ $1 ]; then
    thisgrep=''
    fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    function getFile {
        file="./web/concrete/js/ccm_app/conversations/"$1
        echo "$(InfoBlock $1 $2)
`cat $file`"
    }
    echo "Building ccm.conversations.js"
    INP="$(getFile 'conversations.js' 'first')
$(getFile 'attachments.js')"

    echo "$INP" > ./web/concrete/js/ccm.conversations.pretty.js
    uglifyjs --no-seqs -o ./web/concrete/js/ccm.conversations.js ./web/concrete/js/ccm.conversations.pretty.js
fi

# Events
thisgrep='web/concrete/js/ccm_app/pubsub.js'
if [ $1 ]; then
    thisgrep=''
fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    echo "Building pubsub.js"
    uglifyjs --no-copyright --no-seqs -o ./web/concrete/js/ccm.pubsub.js ./web/concrete/js/ccm_app/pubsub.js
fi

# Layouts
thisgrep='web/concrete/js/layouts/layouts.js'
if [ $1 ]; then
    thisgrep=''
fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    echo "Building ccm.layouts.js"
    uglifyjs -o ./web/concrete/js/ccm.layouts.js ./web/concrete/js/layouts/layouts.js
fi

# Backstretch
thisgrep='web/concrete/js/ccm_app/backstretch.js'
if [ $1 ]; then
    thisgrep=''
fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    echo "Building backstretch.js"
    uglifyjs -o ./web/concrete/js/jquery.backstretch.js ./web/concrete/js/ccm_app/backstretch.js
fi

# Bootstrap
thisgrep='web/concrete/js/bootstrap/'
if [ $1 ]; then
    thisgrep=''
    fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    function getFile {
        file="./web/concrete/js/bootstrap/"$1
        echo "$(InfoBlock $1 $2)
`cat $file`"
    }
    echo "Building ccm.conversations.js"
    INP="$(getFile 'bootstrap-alert.js' 'first')
$(getFile 'bootstrap-tooltip.js')
$(getFile 'bootstrap-dropdown.js')
$(getFile 'bootstrap-popover.js')
$(getFile 'bootstrap-transition.js')"

    echo "$INP" > ./web/concrete/js/bootstrap.pretty.js
    uglifyjs --no-seqs -o ./web/concrete/js/bootstrap.js ./web/concrete/js/bootstrap.pretty.js
fi

# CCM APP
thisgrep='web/concrete/js/ccm_app/'
if [ $1 ]; then
    thisgrep=''
fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    echo "Building ccm.app.js"
    # Note: The order here is important
    function getFile {
        file="./web/concrete/js/ccm_app/"$1
        echo "$(InfoBlock $1)
`cat $file`"
    }

    INP="$(getFile 'jquery.colorpicker.js' first)
$(getFile 'jquery.hoverIntent.js')
$(getFile 'jquery.liveupdate.js')
$(getFile 'jquery.metadata.js')
$(getFile 'chosen.jquery.js')
$(getFile 'base.js')
$(getFile 'ui.js')
$(getFile 'edit_page.js')
$(getFile 'filemanager.js')
$(getFile 'jquery.cookie.js')
$(getFile 'legacy_dialog.js')
$(getFile 'newsflow.js')
$(getFile 'page_reindexing.js')
$(getFile 'in_context_menu.js')
$(getFile 'quicksilver.js')
$(getFile 'remote_marketplace.js')
$(getFile 'inline_edit.js')
$(getFile 'search.js')
$(getFile 'sitemap.js')
$(getFile 'custom_style.js')
$(getFile 'tabs.js')
$(getFile 'toolbar.js')
$(getFile 'themes.js')"

    echo "$INP" > ./web/concrete/js/ccm.app.pretty.js
    uglifyjs --no-seqs -o ./web/concrete/js/ccm.app.js ./web/concrete/js/ccm.app.pretty.js
fi


# Image Editor
thisgrep='web/concrete/js/image_editor/build/'
if [ $1 ]; then
    thisgrep=''
fi
if $(echo "$status" | grep "$thisgrep" &> /dev/null); then
    function getFile {
        file="./web/concrete/js/image_editor/build/"$1
        echo "$(InfoBlock $1 $2)
`cat $file`"
    }
    echo "Building image_editor.js"
    INP="$(getFile 'head.js' 'first')
$(getFile 'kinetic.prototype.js')
$(getFile 'imageeditor.js')
$(getFile 'history.js')
$(getFile 'events.js')
$(getFile 'elements.js')
$(getFile 'controls.js')
$(getFile 'save.js')
$(getFile 'extend.js')
$(getFile 'background.js')
$(getFile 'imagestage.js')
$(getFile 'image.js')
$(getFile 'actions.js')
$(getFile 'slideOut.js')
$(getFile 'jquerybinding.js')
$(getFile 'filters.js')
$(getFile 'foot.js')"

    echo "$INP" > ./web/concrete/js/image_editor/image_editor.js

    INP=`cat ./web/concrete/js/image_editor/build/kinetic.js`
    INP=$INP"

"`cat ./web/concrete/js/image_editor/image_editor.js`
    echo "$INP" > image_editor.tmp.js

    uglifyjs --no-seqs -o ./web/concrete/js/image_editor.min.js ./image_editor.tmp.js
    rm image_editor.tmp.js
fi
